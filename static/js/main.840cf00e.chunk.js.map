{"version":3,"sources":["components/HomeScreen.js","questions.js","components/QuizScreen.js","components/SelectScreen.js","components/InfoScreen.js","components/App.js","index.js"],"names":["HomeScreen","history","useHistory","className","onClick","push","getQs","id","qIsEnglish","qlist","qs","questionSets","slice","len","length","answers","list","ans","ansLang","q","getAnswers","qLang","finishedQs","i","Math","floor","random","options","getOptions","word","option1","option2","option3","option4","correct","splice","idx","indexOf","console","log","correctIndex","temp","getStyle","selected","answer","classname","QuizScreen","quizId","useParams","useState","setI","setSelected","setQs","done","setDone","disabled","every","v","QuizSelect","url","to","SelectScreen","useRouteMatch","path","exact","goBack","InfoScreen","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wgGA+BeA,MA3Bf,WACE,IAAMC,EAAUC,cAEhB,OACE,qBAAKC,UAAU,UAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,QAAhB,4CACA,sBAAKA,UAAU,UAAf,UACE,sBACEA,UAAU,cACVC,QAAS,kBAAMH,EAAQI,KAAK,YAF9B,kBAMA,sBACEF,UAAU,cACVC,QAAS,kBAAMH,EAAQI,KAAK,UAF9B,2B,wBChBK,SAASC,EAAMC,EAAIC,GAShC,IARA,IAAIC,EAAQC,EAAGC,aAAaJ,GAAIK,QAC5BC,EAAMJ,EAAMK,OAEVC,EAsBR,SAAoBC,EAAMR,GACxB,IADoC,EAChCS,EAAM,GAEJC,EAAUV,EAAa,cAAgB,UAHT,cAItBQ,GAJsB,IAIpC,2BAAoB,CAAC,IAAZG,EAAW,QAClBF,EAAIZ,KAAKc,EAAED,KALuB,8BAQpC,OAAOD,EA9BSG,CAAWX,EAAOD,GAE5Ba,EAAQb,EAAa,UAAY,cACjCU,EAAUV,EAAa,cAAgB,UACzCc,EAAa,GACVA,EAAWR,OAASD,GAAK,CAC9B,IAAMU,EAAIC,KAAKC,MAAMD,KAAKE,SAAWjB,EAAMK,QACrCK,EAAIV,EAAMc,GACVI,EAAUC,EAAWb,EAASI,EAAED,IACtCI,EAAWjB,KAAK,CACdwB,KAAMV,EAAEE,GACRS,QAASH,EAAQ,GACjBI,QAASJ,EAAQ,GACjBK,QAASL,EAAQ,GACjBM,QAASN,EAAQ,GACjBO,QAASf,EAAED,KAEbT,EAAM0B,OAAOZ,EAAG,GAElB,OAAOD,EAcT,SAASM,EAAWb,EAASc,GAC3B,IAAIZ,EAAMF,EAAQH,QACde,EAAU,CAACE,GACTO,EAAMnB,EAAIoB,QAAQR,GAMxB,KALa,IAATO,EACFnB,EAAIkB,OAAOC,EAAK,GAEhBE,QAAQC,IAAI,+BAEPZ,EAAQb,OAAS,GAAKG,EAAIH,OAAS,GAAG,CAC3C,IAAMS,EAAIC,KAAKC,MAAMD,KAAKE,SAAWT,EAAIH,QACzCa,EAAQtB,KAAKY,EAAIM,IACjBN,EAAIkB,OAAOZ,EAAG,GAEZI,EAAQb,OAAS,GACnBwB,QAAQC,IAAI,qCAGd,IAAMC,EAAehB,KAAKC,MAAMD,KAAKE,SAAWC,EAAQb,QAClD2B,EAAOd,EAAQa,GAGrB,OAFAb,EAAQa,GAAgBb,EAAQ,GAChCA,EAAQ,GAAKc,EACNd,E,MCYT,SAASe,EAASC,EAAUpC,EAAI2B,EAASU,GACvC,IAAIC,EAAY,SAQhB,OAPIF,EAASpC,KAETsC,GADEX,IAAYU,EACD,WAEA,cAGVC,EAGMC,MA/Ef,WAAuB,IACfC,EAAWC,cAAXD,OADc,GAEN7C,cACE+C,mBAAS,IAHL,mBAGf1B,EAHe,KAGZ2B,EAHY,OAIUD,mBAAS,EAAC,GAAO,GAAO,GAAO,IAJzC,mBAIfN,EAJe,KAILQ,EAJK,OAKFF,mBAAS3C,EAAMyC,GAAQ,IALrB,mBAKfrC,EALe,KAKX0C,EALW,OAMEH,oBAAS,GANX,mBAMfI,EANe,KAMTC,EANS,KAQpB,OACE,qBAAKnD,UAAU,UAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,YAAhB,SAA6B,UAAY4C,IACzC,sBAAM5C,UAAU,OAAhB,SAAwBO,EAAGa,GAAGM,OAC9B,qBAAI1B,UAAU,OAAd,UACE,oBACEA,UAAWuC,EAASC,EAAU,EAAGjC,EAAGa,GAAGW,QAASxB,EAAGa,GAAGO,SACtD1B,QAAS,WAAQ+C,EAAY,EAAER,EAAS,IAAI,GAAO,GAAO,KAF5D,SAIGjC,EAAGa,GAAGO,UAET,oBACE3B,UAAWuC,EAASC,EAAU,EAAGjC,EAAGa,GAAGW,QAASxB,EAAGa,GAAGQ,SACtD3B,QAAS,WAAQ+C,EAAY,EAAC,GAAQR,EAAS,IAAI,GAAO,KAF5D,SAIGjC,EAAGa,GAAGQ,UAET,oBACE5B,UAAWuC,EAASC,EAAU,EAAGjC,EAAGa,GAAGW,QAASxB,EAAGa,GAAGS,SACtD5B,QAAS,WAAQ+C,EAAY,EAAC,GAAO,GAAQR,EAAS,IAAI,KAF5D,SAIGjC,EAAGa,GAAGS,UAET,oBACE7B,UAAWuC,EAASC,EAAU,EAAGjC,EAAGa,GAAGW,QAASxB,EAAGa,GAAGU,SACtD7B,QAAS,WAAQ+C,EAAY,EAAC,GAAO,GAAO,GAAQR,EAAS,MAF/D,SAIGjC,EAAGa,GAAGU,aAGX,wBACE9B,UAAU,OACVC,QAAS,WACP+C,EAAY,EAAC,GAAO,GAAO,GAAO,IAC9BE,GACFD,EAAM9C,EAAMyC,GAAQ,IACpBG,EAAK,GACLI,GAAQ,IAEJ/B,EAAI,EAAIb,EAAGI,SACTS,EAAI,IAAMb,EAAGI,QACfwC,GAAQ,GAEVJ,EAAK3B,EAAI,KAIfgC,SAAUZ,EAASa,OAAM,SAAAC,GAAC,OAAKA,KAjBjC,SAmBGJ,EAAO,UAAY,SAGtB,2CAAY9B,EAAI,EAAhB,YAAqBb,EAAGI,gB,MCrChC,SAAS4C,EAAT,GAA8B,IAARC,EAAO,EAAPA,IACpB,OACE,qBAAKxD,UAAU,UAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,SAAhB,2BACA,qBAAIA,UAAU,WAAd,UACE,oBAAIA,UAAU,OAAd,SACE,cAAC,IAAD,CACEyD,GAAE,UAAKD,EAAL,cACFxD,UAAU,OAFZ,SAIE,wBAAQA,UAAU,aAAlB,2BAKJ,oBAAIA,UAAU,OAAd,SACE,cAAC,IAAD,CACEyD,GAAE,UAAKD,EAAL,SACFxD,UAAU,OAFZ,SAIE,wBAAQA,UAAU,aAAlB,sBAKJ,oBAAIA,UAAU,OAAd,SACE,cAAC,IAAD,CACEyD,GAAE,UAAKD,EAAL,YACFxD,UAAU,OAFZ,SAIE,wBAAQA,UAAU,aAAlB,iCAWC0D,MAlEf,WACE,IAAM5D,EAAUC,cADM,EAEF4D,cAAdC,EAFgB,EAEhBA,KAAMJ,EAFU,EAEVA,IAEZ,OACE,gCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,OAAK,EAACD,KAAMA,EAAnB,SACE,cAACL,EAAD,CAAYC,IAAKA,MAEnB,cAAC,IAAD,CAAOI,KAAI,UAAKA,EAAL,YAAX,SACE,cAAC,EAAD,SAGJ,wBACE5D,UAAU,OACVC,QAAS,kBAAMH,EAAQgE,UAFzB,SAIG,a,MCaMC,MAjCf,WACE,IAAMjE,EAAUC,cAEhB,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,QAAhB,yBACA,sBAAKA,UAAU,UAAf,UACE,sBAAMA,UAAU,SAAhB,kCAGA,sBAAMA,UAAU,OAAhB,mTAGA,sBAAMA,UAAU,SAAhB,6BAGA,sBAAMA,UAAU,OAAhB,+SAKJ,wBACEA,UAAU,OACVC,QAAS,kBAAMH,EAAQgE,UAFzB,SAIG,aCKME,MArBf,WACE,OACE,gCACE,2CACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOH,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,eCtBZK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.840cf00e.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../style/HomeScreen.css'\n\nfunction HomeScreen() {\n  const history = useHistory()\n\n  return (\n    <div className='wrapper'>\n      <div className='innerWrapper'>\n        <span className='title'>Nimipuutímt Vocabulary Quiz</span>\n        <div className='buttons'>\n          <span\n            className='button play'\n            onClick={() => history.push('/select')}\n          >\n            Play\n          </span>\n          <span\n            className='button info'\n            onClick={() => history.push('/info')}\n          >\n            Info\n          </span>\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default HomeScreen","import qs from \"./questions.json\"\n\nexport default function getQs(id, qIsEnglish) {\n  let qlist = qs.questionSets[id].slice();\n  let len = qlist.length;\n\n  const answers = getAnswers(qlist, qIsEnglish);\n\n  const qLang = qIsEnglish ? 'english' : 'nimipuutimt';\n  const ansLang = qIsEnglish ? 'nimipuutimt' : 'english';\n  let finishedQs = [];\n  while (finishedQs.length < len) {\n    const i = Math.floor(Math.random() * qlist.length);\n    const q = qlist[i];\n    const options = getOptions(answers, q[ansLang]);\n    finishedQs.push({\n      word: q[qLang],\n      option1: options[0],\n      option2: options[1],\n      option3: options[2],\n      option4: options[3],\n      correct: q[ansLang]\n    });\n    qlist.splice(i, 1);\n  }\n  return finishedQs;\n}\n\nfunction getAnswers(list, qIsEnglish) {\n  let ans = [];\n  //answer is opposite of the question language\n  const ansLang = qIsEnglish ? 'nimipuutimt' : 'english';\n  for (let q of list) {\n    ans.push(q[ansLang]);\n  }\n\n  return ans;\n}\n\nfunction getOptions(answers, word) {\n  let ans = answers.slice();\n  let options = [word];\n  const idx = ans.indexOf(word);\n  if (idx !== -1) {\n    ans.splice(idx, 1);\n  } else {\n    console.log(\"word not in answers somehow\");\n  }\n  while (options.length < 4 && ans.length > 0) {\n    const i = Math.floor(Math.random() * ans.length);\n    options.push(ans[i]);\n    ans.splice(i, 1);\n  }\n  if (options.length < 4) {\n    console.log(\"getOptions did not find 4 options\");\n  }\n  //randomize the position of the correct answer\n  const correctIndex = Math.floor(Math.random() * options.length);\n  const temp = options[correctIndex];\n  options[correctIndex] = options[0];\n  options[0] = temp;\n  return options;\n}\n","//ẋ\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport getQs from '../questions';\nimport '../style/QuizScreen.css'\n\nfunction QuizScreen() {\n  let { quizId } = useParams();\n  let history = useHistory();\n  let [i, setI] = useState(0);\n  let [selected, setSelected] = useState([false, false, false, false]);\n  let [qs, setQs] = useState(getQs(quizId, false));\n  let [done, setDone] = useState(false);\n\n  return (\n    <div className='wrapper'>\n      <div className='innerWrapper'>\n        <span className='quizTitle'>{'Topic: ' + quizId}</span>\n        <span className='word'>{qs[i].word}</span>\n        <ul className='list'>\n          <li\n            className={getStyle(selected, 0, qs[i].correct, qs[i].option1)}\n            onClick={() => { setSelected([!selected[0], false, false, false]) }}\n          >\n            {qs[i].option1}\n          </li>\n          <li\n            className={getStyle(selected, 1, qs[i].correct, qs[i].option2)}\n            onClick={() => { setSelected([false, !selected[1], false, false]); }}\n          >\n            {qs[i].option2}\n          </li>\n          <li\n            className={getStyle(selected, 2, qs[i].correct, qs[i].option3)}\n            onClick={() => { setSelected([false, false, !selected[2], false]); }}\n          >\n            {qs[i].option3}\n          </li>\n          <li\n            className={getStyle(selected, 3, qs[i].correct, qs[i].option4)}\n            onClick={() => { setSelected([false, false, false, !selected[3]]); }}\n          >\n            {qs[i].option4}\n          </li>\n        </ul>\n        <button\n          className='next'\n          onClick={() => {\n            setSelected([false, false, false, false]);\n            if (done) {\n              setQs(getQs(quizId, false));\n              setI(0);\n              setDone(false);\n            } else {\n              if (i + 1 < qs.length) {\n                if (i + 2 === qs.length) {\n                  setDone(true);\n                }\n                setI(i + 1);\n              }\n            }\n          }}\n          disabled={selected.every(v => !v)}\n        >\n          {done ? 'Restart' : 'Next'}\n        </button>\n        {/* <button onClick={() => alert(selected)}>Test</button> */}\n        <header>{`${i + 1}/${qs.length}`}</header>\n      </div>\n    </div>\n  )\n}\n\nfunction getStyle(selected, id, correct, answer) {\n  let classname = 'option'\n  if (selected[id]) {\n    if (correct === answer) {\n      classname += ' correct';\n    } else {\n      classname += ' incorrect';\n    }\n  }\n  return classname;\n}\n\nexport default QuizScreen","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch, useHistory, useRouteMatch, Link } from 'react-router-dom';\nimport QuizScreen from './QuizScreen'\nimport '../style/SelectScreen.css'\n\nfunction SelectScreen() {\n  const history = useHistory();\n  let { path, url } = useRouteMatch();\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path={path}>\n          <QuizSelect url={url} />\n        </Route>\n        <Route path={`${path}/:quizId`}>\n          <QuizScreen />\n        </Route>\n      </Switch>\n      <button\n        className='back'\n        onClick={() => history.goBack()}\n      >\n        {'Back'}\n      </button>\n    </div>\n  )\n}\n\nfunction QuizSelect({ url }) {\n  return (\n    <div className='wrapper'>\n      <div className='innerWrapper'>\n        <span className='select'>Select a quiz</span>\n        <ul className='quizlist'>\n          <li className='item'>\n            <Link\n              to={`${url}/greetings`}\n              className='link'\n            >\n              <button className='quizButton'>\n                Greetings\n              </button>\n            </Link>\n          </li>\n          <li className='item'>\n            <Link\n              to={`${url}/time`}\n              className='link'\n            >\n              <button className='quizButton'>\n                Time\n              </button>\n            </Link>\n          </li>\n          <li className='item'>\n            <Link\n              to={`${url}/weather`}\n              className='link'\n            >\n              <button className='quizButton'>\n                Weather\n              </button>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default SelectScreen","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../style/InfoScreen.css'\n\nfunction InfoScreen() {\n  const history = useHistory()\n\n  return (\n    <div className='wrapper'>\n      <div className='innerWrapper'>\n        <span className='title'>Information</span>\n        <div className='buttons'>\n          <span className='header'>\n            About Nimipuutímt\n          </span>\n          <span className='body'>\n            Nimipuutímt, or Nez Perce, is an indigenous language of North America spoken in the state of Idaho by the Niimíipuu people, also known as the Nez Perce. The language is in the Sahaptian family and notably features polysynthesis, no fixed word order, and a tripartite case marking system.\n          </span>\n          <span className='header'>\n            About This Site\n          </span>\n          <span className='body'>\n            This application was created by an undergraduate linguistics student for a final project. Hopefully it helps some people keep this very beautiful and unique language from being forgotten. In order to report issues and mistakes or to request features, please email ceh279@cornell.edu.\n          </span>\n        </div>\n      </div>\n      <button\n        className='back'\n        onClick={() => history.goBack()}\n      >\n        {'Back'}\n      </button>\n    </div>\n  )\n\n}\n\nexport default InfoScreen","// import logo from './logo.svg';\nimport '../style/App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  useRouteMatch\n} from \"react-router-dom\";\nimport HomeScreen from './HomeScreen'\nimport SelectScreen from './SelectScreen'\nimport InfoScreen from './InfoScreen'\n\nfunction App() {\n  return (\n    <div>\n      <header>Hello</header>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomeScreen />\n          </Route>\n          <Route path=\"/select\">\n            <SelectScreen />\n          </Route>\n          <Route path=\"/info\">\n            <InfoScreen />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}